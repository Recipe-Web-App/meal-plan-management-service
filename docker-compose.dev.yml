version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/meal_plan_db
      - REDIS_HOST=redis
      - JWT_SECRET=development-jwt-secret
      - LOG_LEVEL=debug
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - meal-plan-network
    command: npm run start:dev

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=meal_plan_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - meal-plan-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    networks:
      - meal-plan-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  meal-plan-network:
    driver: bridge
