{
  "info": {
    "name": "Meal Plan Management API",
    "description": "Complete API testing collection for Meal Plan Management Service with organized endpoints by category",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{mealPlanServiceAccessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "testMealPlanId",
      "value": "12345678-1234-1234-1234-123456789012",
      "type": "string",
      "description": "Sample meal plan ID for testing"
    },
    {
      "key": "testRecipeId",
      "value": "87654321-4321-4321-4321-210987654321",
      "type": "string",
      "description": "Sample recipe ID for testing"
    },
    {
      "key": "testMealDate",
      "value": "2024-01-15",
      "type": "string",
      "description": "Sample meal date for testing"
    },
    {
      "key": "createdMealPlanId",
      "value": "",
      "type": "string",
      "description": "Dynamically set meal plan ID from create operations"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints for user login and token management",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.environment.set(\"mealPlanServiceAccessToken\", jsonData.access_token);",
                  "});",
                  "",
                  "pm.test(\"Response has user info\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    if (jsonData.user) {",
                  "        pm.environment.set(\"mealPlanServiceUserId\", jsonData.user.id);",
                  "        pm.environment.set(\"mealPlanServiceUsername\", jsonData.user.username);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{mealPlanServiceTestUserUsername}}\",\n  \"password\": \"{{mealPlanServiceTestUserPassword}}\"\n}"
            },
            "url": {
              "raw": "{{mealPlanServiceAuthBaseUrl}}/login",
              "host": ["{{mealPlanServiceAuthBaseUrl}}"],
              "path": ["login"]
            }
          }
        }
      ]
    },
    {
      "name": "Meal Plans",
      "description": "Core meal plan CRUD operations and management",
      "item": [
        {
          "name": "Create Meal Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response has data with meal plan ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.collectionVariables.set(\"createdMealPlanId\", jsonData.data.id);",
                  "});",
                  "",
                  "pm.test(\"Response includes meal plan details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('name');",
                  "    pm.expect(jsonData.data).to.have.property('startDate');",
                  "    pm.expect(jsonData.data).to.have.property('endDate');",
                  "    pm.expect(jsonData.data).to.have.property('userId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Weekly Meal Plan\",\n  \"description\": \"Healthy meal plan for the week\",\n  \"startDate\": \"2024-01-15\",\n  \"endDate\": \"2024-01-21\",\n  \"targetCalories\": 2000,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans"]
            }
          }
        },
        {
          "name": "Get All Meal Plans",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response has data array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Response has pagination meta\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('meta');",
                  "    pm.expect(jsonData.meta).to.have.property('page');",
                  "    pm.expect(jsonData.meta).to.have.property('limit');",
                  "    pm.expect(jsonData.meta).to.have.property('total');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans?page=1&limit=10",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Meal Plan by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response has meal plan data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('name');",
                  "    pm.expect(jsonData.data).to.have.property('userId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}"]
            }
          }
        },
        {
          "name": "Get Meal Plan with View Mode",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has view mode\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('viewMode');",
                  "    pm.expect(jsonData.viewMode).to.be.oneOf(['full', 'day', 'week', 'month']);",
                  "});",
                  "",
                  "pm.test(\"Response structure matches view mode\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.viewMode === 'day') {",
                  "        pm.expect(jsonData.data).to.have.property('meals');",
                  "        pm.expect(jsonData.data).to.have.property('date');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}?viewMode=day&date=2024-01-15&includeStatistics=true",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}"],
              "query": [
                {
                  "key": "viewMode",
                  "value": "day"
                },
                {
                  "key": "date",
                  "value": "2024-01-15"
                },
                {
                  "key": "includeStatistics",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Update Meal Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response has updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.have.property('name');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Weekly Meal Plan\",\n  \"description\": \"Updated healthy meal plan for the week\",\n  \"targetCalories\": 2200,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}"]
            }
          }
        },
        {
          "name": "Delete Meal Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Meal Management",
      "description": "Operations for managing meals within meal plans",
      "item": [
        {
          "name": "Add Meal to Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test(\"Response has data with meal details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"recipeId\": \"{{testRecipeId}}\",\n  \"day\": 1,\n  \"mealType\": \"BREAKFAST\",\n  \"servings\": 2,\n  \"notes\": \"Great start to the day\"\n}"
            },
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}/meals",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}", "meals"]
            }
          }
        },
        {
          "name": "Remove Specific Meal",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}/meals/{{testRecipeId}}?mealDate={{testMealDate}}&mealType=BREAKFAST",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}", "meals", "{{testRecipeId}}"],
              "query": [
                {
                  "key": "mealDate",
                  "value": "{{testMealDate}}"
                },
                {
                  "key": "mealType",
                  "value": "BREAKFAST"
                }
              ]
            }
          }
        },
        {
          "name": "Clear All Meals from Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success property\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/meal-plans/{{testMealPlanId}}/meals",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["meal-plans", "{{testMealPlanId}}", "meals"]
            }
          }
        }
      ]
    },
    {
      "name": "Health & Monitoring",
      "description": "Health check endpoints and service monitoring",
      "item": [
        {
          "name": "Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 503\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 503]);",
                  "});",
                  "",
                  "pm.test(\"Response has status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.be.oneOf(['ok', 'error']);",
                  "});",
                  "",
                  "pm.test(\"Response has info\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('info');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/health",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Readiness Probe",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/health/ready",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["health", "ready"]
            }
          }
        },
        {
          "name": "Liveness Probe",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200 or 503\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 503]);",
                  "});",
                  "",
                  "pm.test(\"Response has status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/health/live",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["health", "live"]
            }
          }
        },
        {
          "name": "Version Info",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has version info\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('version');",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/health/version",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["health", "version"]
            }
          }
        }
      ]
    },
    {
      "name": "System Information",
      "description": "System information and configuration endpoints",
      "item": [
        {
          "name": "Service Info",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has service info\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData).to.have.property('version');",
                  "    pm.expect(jsonData).to.have.property('environment');",
                  "    pm.expect(jsonData).to.have.property('uptime');",
                  "    pm.expect(jsonData).to.have.property('memory');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/info",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["info"]
            }
          }
        },
        {
          "name": "Safe Configuration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has configuration sections\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('environment');",
                  "    pm.expect(jsonData).to.have.property('database');",
                  "    pm.expect(jsonData).to.have.property('oauth2');",
                  "    pm.expect(jsonData).to.have.property('logging');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/config",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["config"]
            }
          }
        }
      ]
    },
    {
      "name": "Metrics & Monitoring",
      "description": "Prometheus metrics and monitoring endpoints",
      "item": [
        {
          "name": "Prometheus Metrics",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is Prometheus format\", function () {",
                  "    var responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('# HELP');",
                  "    pm.expect(responseText).to.include('# TYPE');",
                  "});",
                  "",
                  "pm.test(\"Contains meal plan service metrics\", function () {",
                  "    var responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('meal_plan_service');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/metrics",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["metrics"]
            }
          }
        }
      ]
    },
    {
      "name": "API Documentation",
      "description": "OpenAPI documentation endpoints",
      "item": [
        {
          "name": "Swagger UI",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is HTML\", function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/html');",
                  "});",
                  "",
                  "pm.test(\"Contains Swagger UI\", function () {",
                  "    var responseText = pm.response.text();",
                  "    pm.expect(responseText).to.include('swagger');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/docs",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["docs"]
            }
          }
        },
        {
          "name": "OpenAPI JSON",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is JSON\", function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                  "});",
                  "",
                  "pm.test(\"Response has OpenAPI structure\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('openapi');",
                  "    pm.expect(jsonData).to.have.property('info');",
                  "    pm.expect(jsonData).to.have.property('paths');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "url": {
              "raw": "{{mealPlanServiceBaseUrl}}/docs-json",
              "host": ["{{mealPlanServiceBaseUrl}}"],
              "path": ["docs-json"]
            }
          }
        }
      ]
    }
  ]
}
